name: Spectralyzer-Nightly

on:
  schedule:
    - cron: '0 0 * * *'

env:
  REPOSITORY_URL: "jfevia/Spectralyzer"
  CONFIGURATION: "Release"
  ENVIRONMENT: "Production"

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout
      if: ${{ success() }}
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup MSBuild
      if: ${{ success() }}
      uses: microsoft/setup-msbuild@v1.3.1

    - name: Restore solution
      if: ${{ success() }}
      run: msbuild Spectralyzer.sln -target:restore -property:Configuration=${{ env.CONFIGURATION }} -property:Environment=${{ env.ENVIRONMENT }}

    - name: Build solution
      if: ${{ success() }}
      run: msbuild Spectralyzer.sln -target:rebuild -property:Configuration=${{ env.CONFIGURATION }} -property:Environment=${{ env.ENVIRONMENT }}

    - name: Generate installer version
      if: ${{ success() }}
      run: echo "INSTALLER_VERSION=$($(Get-Date).ToUniversalTime().ToString('yyyy.MM.dd.mmss'))-nightly" >> $env:GITHUB_ENV

    - name: Run unit tests
      if: ${{ success() }}
      run: dotnet test Spectralyzer.sln

    - name: GitHub release
      if: ${{ success() }}
      run: |
        $fileName = "bin\Installer\en-US\Installer.msi"

        # Create GitHub release
        $token = "${{ secrets.GITHUB_TOKEN }}"
        $apiUrl = "https://api.github.com/repos/${{ env.REPOSITORY_URL }}/releases"
        $headers = @{
            "Accept" = "application/vnd.github+json"
            "Authorization" = "Bearer $token"
            "X-GitHub-Api-Version" = "2022-11-28"
        }
        $version = "${{ env.INSTALLER_VERSION }}"
        $tag = "v$version"
        $body = @{
            tag_name = "$tag"
            target_commitish = "main"
            name = "$version"
            body = ""
            draft = $false
            prerelease = $true
            generate_release_notes = $true
        } | ConvertTo-Json
        $response = Invoke-RestMethod -Uri $apiUrl -Method Post -Headers $headers -Body $body
        $releaseId = $response.id

        # Create GitHub release asset (Installer)
        $apiUrl = "https://uploads.github.com/repos/${{ env.REPOSITORY_URL }}/releases/$releaseId/assets?name=$fileName"
        $headers = @{
            "Accept" = "application/vnd.github+json"
            "Authorization" = "Bearer $token"
            "X-GitHub-Api-Version" = "2022-11-28"
            "Content-Type" = "application/octet-stream"
        }
        Invoke-RestMethod -Uri $apiUrl -Method Post -Headers $headers -InFile "$fileName"